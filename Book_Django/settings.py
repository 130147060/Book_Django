"""
Django settings for Book_Django project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'en3y6(t@romzom#0mch@_g&fd!#0e4*43#t8&$+-)5_c6l7nnx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
#应项目需求创建APPS
MY_APPS = [
    'Apps.book_main',
    'Apps.book_account',
    'Apps.book_search',
    'Apps.book_detail',
    'Apps.book_car',
    'Apps.book_order',
    'Apps.book_pay',
    'Apps.email_register'
]

#系统自带APPS
SYS_APPS =[
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

#第三方扩展APPS

EXT_APPS = [
    'djcelery',
    'xadmin',
    'crispy_forms'
]

INSTALLED_APPS = SYS_APPS + MY_APPS + EXT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Book_Django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Apps.book_account.context_processors.shop_count'
            ],
        },
    },
]

WSGI_APPLICATION = 'Book_Django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'quanshu1105',
        'USER': 'root',
        'PASSWORD': '130147060',
        'PORT': '3306',
        'HOST': '127.0.0.1',
        'CHARSET': 'utf8'
    }
}
# AUTH_USER_MODEL = 'book_account.User'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
# 配置静态资源目录
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'Apps/book_account/static'),
    os.path.join(BASE_DIR, 'Apps/book_main/static'),
)


# 全局跳转登录界面
LOGIN_URL = '/account/login/'

##################支付配置#######################
ALIPAY_APPID = "2016092000555260"
ALT_PAY_DEV_URL='https://openapi.alipaydev.com/gateway.do?'
# 网站私钥文件路径
APP_PRIVATE_KEY_PATH = os.path.join(BASE_DIR, 'static/pay/alipay_private_key.pem')
# 支付宝公钥文件路径
ALIPAY_PUBLIC_KEY_PATH = os.path.join(BASE_DIR, 'static/pay/alipay_pubilc_key.pem')
##################支付配置结束####################


##################邮箱配置#######################
EMAIL_HOST = "smtp.163.com"   # 服务器
EMAIL_PORT = 25               # 一般情况下都为25
EMAIL_HOST_USER = "l130147060@163.com"   # 账号(邮箱账号)
EMAIL_HOST_PASSWORD = "woaiguyajie111"  # 密码(非邮箱密码)
EMAIL_USE_TLS = False             # 一般都为False
EMAIL_FROM = "l130147060@163.com"        # 邮箱来自
##################邮箱配置结束####################

############### celery settings begin #############
'''
celery是分布式异步消息队列处理框架
以redis作为MQ数据存储和转发
'''
REDIS_DEPLOY_FLAG = "test"

REDIS_SERVICE = {
    'test': ('127.0.0.1', '6379'),
    'online': ('192.168.11.11', '10379'),
}

CELERY_BROKER_URL = 'redis://%s:%s/1' % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
                                         REDIS_SERVICE[REDIS_DEPLOY_FLAG][1])

CELERY_ACCEPT_CONTENT = ['json']

CELERY_TASK_SERIALIZER = 'json'

# CELERY_RESULT_BACKEND = 'django-db'

CELERY_RESULT_BACKEND = 'redis://%s:%s/2' % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
                                             REDIS_SERVICE[REDIS_DEPLOY_FLAG][1])

# 部署的django服务的IP和端口
DJANGO_SERVICE = ('127.0.0.1', 8000)

import redis

R = redis.Redis(host='127.0.0.1', port=6379, db=0)

CACHES = {
    'default': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://%s:%s/1" % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
                                         REDIS_SERVICE[REDIS_DEPLOY_FLAG][1]),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

############### celery settings end #############